"""
Django settings for cognivue project.

Generated by 'django-admin startproject' using Django 5.2.5.
Docs: https://docs.djangoproject.com/en/5.2/
"""
from pathlib import Path
import os, dj_database_url

BASE_DIR = Path(__file__).resolve().parent.parent

# Feature flags
ALLOW_SCRAPER = os.getenv("ALLOW_SCRAPER", "0") == "1"

# Security
SECRET_KEY = 'django-insecure-yv#d+1#y7&mpu$d52n64c2=h!2m*p@v*f^w_jwaprfpaf&tc_4'
DEBUG = False
ALLOWED_HOSTS = [
    "brainvid-ggggfpc3cugra5aj.eastasia-01.azurewebsites.net",
    "127.0.0.1",
    "localhost",
    "api.brainvid.me",
    "www.brainvid.me",
    "brainvid.me",
]

# Third-party / apps
INSTALLED_APPS = [
    "corsheaders",
    "news_scraper",
    "timer",
    "vitamin_d_helper",
    "django_countries",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "insights",
    "rest_framework",
    "nutrition",
    "simpleauth",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware", 
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "cognivue.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "cognivue.wsgi.application"

# Database (SQLite for Azure test)
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

DB_URL = os.getenv("DATABASE_URL")
if DB_URL:
    DATABASES["default"] = dj_database_url.parse(
        DB_URL,
        conn_max_age=60,   # short keep-alive; Supabase pool handles this
        ssl_require=True,
    )

# Safety with pools
DISABLE_SERVER_SIDE_CURSORS = True

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# I18N
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Static
STATIC_URL = "static/"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Auth redirects
LOGOUT_REDIRECT_URL = "/accounts/login/"
LOGIN_REDIRECT_URL = "/vitamin-d-helper/"

# API KEYS
OPENWEATHER_API_KEY = "0ba8d4e3b494e7864ea8b8ac09bf7275"
GROQ_API_KEY = os.getenv("GROQ_API_KEY", "")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY", "")
PEXELS_API_KEY = os.getenv("PEXELS_API_KEY", "")
GEMINI_PROXY_URL = os.getenv("GEMINI_PROXY_URL", "https://gemini-proxy.brainvid.workers.dev")

# --- CORS / CSRF for Vue on Azure SWA ---
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "https://mango-dune-003323700.2.azurestaticapps.net",  # frontend prod
    "https://www.brainvid.me",
    "https://brainvid.me",
]
CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = [
    "https://mango-dune-003323700.2.azurestaticapps.net",  # no :5173 in prod
    "https://brainvid-ggggfpc3cugra5aj.eastasia-01.azurewebsites.net",
    "https://api.brainvid.me",
    "https://www.brainvid.me",
    "https://brainvid.me",
]

# Cross-site cookies over HTTPS
SESSION_COOKIE_DOMAIN = ".brainvid.me"
CSRF_COOKIE_DOMAIN    = ".brainvid.me"

SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE    = True
SESSION_COOKIE_SAMESITE = "None"
CSRF_COOKIE_SAMESITE    = "None"


# Tell Django the original scheme behind Azureâ€™s proxy
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# Dev Override (for local development):
if os.getenv("DJANGO_DEV", "0") == "1":
    DEBUG = True

    # Frontend dev origin
    CORS_ALLOWED_ORIGINS += [
        "http://localhost:5173",
        "http://127.0.0.1:5173",
    ]
    CORS_ALLOW_CREDENTIALS = True

    # CSRF for dev
    CSRF_TRUSTED_ORIGINS += [
        "http://localhost:5173",
        "http://127.0.0.1:5173",
        "http://localhost:8000",
        "http://127.0.0.1:8000",
    ]

    # Cookies over HTTP in dev    
    CSRF_COOKIE_DOMAIN = ".brainvid.me"
    SESSION_COOKIE_DOMAIN = ".brainvid.me"
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SAMESITE = "None"
    SESSION_COOKIE_SAMESITE = "None"

    # Not behind Azure proxy locally
    SECURE_PROXY_SSL_HEADER = None